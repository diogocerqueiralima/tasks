services:
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_DB: ${POSTGRESQL_DATABASE}
    networks:
      - network
    env_file:
      - .env
  broker:
    image: apache/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://broker:9092,CONTROLLER://broker:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 1
    networks:
      - network
  authorization-server:
    build: ./authorization-server
    ports:
      - "9000:9000"
    networks:
      - network
    env_file:
      - .env
    depends_on:
      - postgres
  email-service:
    build: ./email-service
    networks:
      - network
    env_file:
      - .env
    depends_on:
      - broker
  tasks-service:
    build: ./tasks-service
    networks:
      - network
    env_file:
      - .env
  gateway:
    build: ./gateway
    ports:
      - "8080:8080"
    networks:
      - network
    depends_on:
      - email-service
      - authorization-server
      - tasks-service
    env_file:
      - .env

networks:
  network:
    driver: bridge